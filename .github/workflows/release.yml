name: Automated Release
on:
  schedule:
    - cron:  "45 3 * * MON"
env:
  JAVA: "java11"
  GRAAL: "20.2.0"
jobs:
  prepare:
    name: Prepare Release
    runs-on: ubuntu-latest
    outputs:
      commit_count: ${{ steps.commits.outputs.count }}
      release_version: ${{ steps.release.outputs.version }}
      previous_version: ${{ steps.previous.outputs.version }}
      changelog: ${{ steps.changelog.outputs.content }}
      release_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - id: checkout
        name: Clone Git Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: commits
        name: Count Commits
        run: echo "::set-output name=count::$(git rev-list --count HEAD --since='last Monday')"
      - id: release
        name: Create Release Version
        if: steps.commits.outputs.count > 0
        run: echo "::set-output name=version::$(date +'%Y.%-m.%-d')"
      - id: previous
        name: Get Last Release
        if: steps.commits.outputs.count > 0
        run: echo "::set-output name=version::$(git describe --abbrev=0 --tags)"
      - id: generate_changelog
        name: Generate Changelog
        if: steps.commits.outputs.count > 0
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          unreleased: true
          issues: true
          issuesWoLabels: true
          pullRequests: true
          prWoLabels: true
          filterByMilestone: false
          futureRelease: ${{ steps.release.outputs.version }}
          sinceTag: ${{ steps.previous.outputs.version }}
          stripGeneratorNotice: true
          stripHeaders: true
      - name: Read Changelog
        id: changelog
        uses: juliangruber/read-file-action@v1
        with:
          path: ./CHANGELOG.md
      - id: create_release
        name: Create Release
        if: steps.commits.outputs.count > 0
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release.outputs.version }}
          release_name: ${{ steps.release.outputs.version }}
          draft: false
          prerelease: false
          body: |
            # ilo
            Manage reproducible build environments. Take a look at the [website](https://ilo.projects.metio.wtf/) for detailed information.
            ## Changes
            ${{ steps.changelog.outputs.content }}
  linux:
    name: Linux packages
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Clone Git Repository
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: graal
        name: GraalVM Setup
        if: needs.prepare.outputs.commit_count > 0
        uses: rinx/setup-graalvm-ce@v0.0.4
        with:
          graalvm-version: ${{ env.GRAAL }}
          java-version: ${{ env.JAVA }}
          native-image: "true"
      - id: cache
        name: Cache Maven Repository
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - id: gpg
        name: GPG Key
        if: needs.prepare.outputs.commit_count > 0
        run: echo "${{ secrets.GPG_KEY }}" | base64 --decode > signing.key.asc
      - id: verify
        if: needs.prepare.outputs.commit_count > 0
        name: Verify Project
        run: mvn --batch-mode --settings $GITHUB_WORKSPACE/build/settings.xml verify -Drevision=${{ needs.prepare.outputs.release_version }} -Dskip.graal=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_KEY_PASSPHRASE: ${{ secrets.GPG_KEY_PASSPHRASE }}
      - id: upload-linux-artifact
        name: Upload Linux Artifact
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare.outputs.release_url }}
          asset_path: ./target/ilo-${{ needs.prepare.outputs.release_version }}-linux.zip
          asset_name: ilo-${{ needs.prepare.outputs.release_version }}-linux.zip
          asset_content_type: application/zip
      - id: upload-linux-checksum
        name: Upload Linux Checksum
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare.outputs.release_url }}
          asset_path: ./target/ilo-${{ needs.prepare.outputs.release_version }}-linux.zip.sha512
          asset_name: ilo-${{ needs.prepare.outputs.release_version }}-linux.zip.sha512
          asset_content_type: text/plain
      - id: upload-linux-signature
        name: Upload Linux Signature
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare.outputs.release_url }}
          asset_path: ./target/ilo-${{ needs.prepare.outputs.release_version }}-linux.zip.asc
          asset_name: ilo-${{ needs.prepare.outputs.release_version }}-linux.zip.asc
          asset_content_type: text/plain
      - id: upload-java11-artifact
        name: Upload Java11 Artifact
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare.outputs.release_url }}
          asset_path: ./target/ilo-${{ needs.prepare.outputs.release_version }}-java11.zip
          asset_name: ilo-${{ needs.prepare.outputs.release_version }}-java11.zip
          asset_content_type: application/zip
      - id: upload-java11-checksum
        name: Upload Java11 Checksum
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare.outputs.release_url }}
          asset_path: ./target/ilo-${{ needs.prepare.outputs.release_version }}-java11.zip.sha512
          asset_name: ilo-${{ needs.prepare.outputs.release_version }}-java11.zip.sha512
          asset_content_type: text/plain
      - id: upload-java11-signature
        name: Upload Java11 Signature
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare.outputs.release_url }}
          asset_path: ./target/ilo-${{ needs.prepare.outputs.release_version }}-java11.zip.asc
          asset_name: ilo-${{ needs.prepare.outputs.release_version }}-java11.zip.asc
          asset_content_type: text/plain
  mac:
    name: MacOS packages
    needs: prepare
    runs-on: macos-latest
    steps:
      - id: checkout
        name: Clone Git Repository
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: graal
        name: GraalVM Setup
        if: needs.prepare.outputs.commit_count > 0
        uses: DeLaGuardo/setup-graalvm@2.0
        with:
          graalvm-version: "${{ env.GRAAL }}.${{ env.JAVA }}"
      - id: native-image
        name: Install native-image
        if: needs.prepare.outputs.commit_count > 0
        run: gu install native-image
      - id: cache
        name: Cache Maven Repository
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - id: gpg
        name: GPG Key
        if: needs.prepare.outputs.commit_count > 0
        run: echo "${{ secrets.GPG_KEY }}" | base64 --decode > signing.key.asc
      - id: verify
        name: Verify Project
        if: needs.prepare.outputs.commit_count > 0
        run: mvn --batch-mode --settings $GITHUB_WORKSPACE/build/settings.xml verify -Drevision=${{ needs.prepare.outputs.release_version }} -Dskip.graal=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_KEY_PASSPHRASE: ${{ secrets.GPG_KEY_PASSPHRASE }}
      - id: upload-mac-artifact
        name: Upload MacOS Artifact
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare.outputs.release_url }}
          asset_path: ./target/ilo-${{ needs.prepare.outputs.release_version }}-mac.zip
          asset_name: ilo-${{ needs.prepare.outputs.release_version }}-mac.zip
          asset_content_type: application/zip
      - id: upload-mac-checksum
        name: Upload MacOS Checksum
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare.outputs.release_url }}
          asset_path: ./target/ilo-${{ needs.prepare.outputs.release_version }}-mac.zip.sha512
          asset_name: ilo-${{ needs.prepare.outputs.release_version }}-mac.zip.sha512
          asset_content_type: text/plain
      - id: upload-mac-signature
        name: Upload MacOS Signature
        if: needs.prepare.outputs.commit_count > 0
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare.outputs.release_url }}
          asset_path: ./target/ilo-${{ needs.prepare.outputs.release_version }}-mac.zip.asc
          asset_name: ilo-${{ needs.prepare.outputs.release_version }}-mac.zip.asc
          asset_content_type: text/plain
  announce:
    name: Release Announcement
    needs: [prepare, linux, mac]
    runs-on: ubuntu-latest
    steps:
      - id: email
        name: Send Mail
        if: needs.prepare.outputs.commit_count > 0
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "ilo #release ${{ needs.prepare.outputs.release_version }}"
          body: See https://github.com/metio/ilo/releases/tag/${{ needs.prepare.outputs.release_version }} for details.
          to: ilo@metio.groups.io
          from: ${{ secrets.MAIL_SENDER }}
      - id: mastodon
        name: Publish Toot
        if: needs.prepare.outputs.commit_count > 0
        uses: rzr/fediverse-action@master
        with:
          access-token: ${{ secrets.MASTODON_TOKEN }}
          message: "#ilo version ${{ needs.prepare.outputs.release_version }} published! https://github.com/metio/ilo/releases/tag/${{ needs.prepare.outputs.release_version }} #metio"
          host: ${{ secrets.MASTODON_SERVER }}
