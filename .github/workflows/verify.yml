name: Verify Commits
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/*"
      - "src/**"
      - "pom.xml"
env:
  JAVA: "java11"
  GRAAL: "21.0.0.2"
jobs:
  linux:
    name: Linux packages
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Clone Git Repository
        uses: actions/checkout@v2
      - id: graal
        name: GraalVM Setup
        uses: rinx/setup-graalvm-ce@v0.0.5
        with:
          graalvm-version: ${{ env.GRAAL }}
          java-version: ${{ env.JAVA }}
          native-image: "true"
      - id: cache
        name: Cache Maven Repository
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - id: gpg
        name: GPG Key
        run: echo "${{ secrets.GPG_SECRET_KEY_BASE64 }}" | base64 --decode > $GITHUB_WORKSPACE/signing.key.asc
      - id: verify
        name: Verify Project
        run: mvn --batch-mode verify -Dskip.graal=false -Dpgp.secretkey=keyfile:$GITHUB_WORKSPACE/signing.key.asc -Dpgp.passphrase=literal:${{ secrets.GPG_SECRET_KEY_PASSWORD }}
      - name: Upload Java 11 Artifact
        uses: actions/upload-artifact@v2
        with:
          name: java11
          path: ./target/ilo-*-java11*
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: ./target/ilo-*-linux*
  mac:
    name: MacOS packages
    runs-on: macos-latest
    steps:
      - id: checkout
        name: Clone Git Repository
        uses: actions/checkout@v2
      - id: graal
        name: GraalVM Setup
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: "${{ env.GRAAL }}.${{ env.JAVA }}"
      - id: native-image
        name: Install native-image
        run: gu install native-image
      - id: cache
        name: Cache Maven Repository
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - id: gpg
        name: GPG Key
        run: echo "${{ secrets.GPG_SECRET_KEY_BASE64 }}" | base64 --decode > $GITHUB_WORKSPACE/signing.key.asc
      - id: verify
        name: Verify Project
        run: mvn --batch-mode verify -Dskip.graal=false -Dpgp.secretkey=keyfile:$GITHUB_WORKSPACE/signing.key.asc -Dpgp.passphrase=literal:${{ secrets.GPG_SECRET_KEY_PASSWORD }}
      - name: Upload Mac Artifact
        uses: actions/upload-artifact@v2
        with:
          name: mac
          path: ./target/ilo-*-mac*
  windows:
    name: Windows packages
    runs-on: windows-latest
    steps:
      - id: checkout
        name: Clone Git Repository
        uses: actions/checkout@v2
      - id: graal-download
        name: GraalVM Download
        run: Invoke-RestMethod -Uri https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${{ env.GRAAL }}/graalvm-ce-${{ env.JAVA }}-windows-amd64-${{ env.GRAAL }}.zip -OutFile 'graal.zip'
      - id: graal-expand
        name: Install GraalVM
        run: Expand-Archive -Path 'graal.zip' -DestinationPath '.'
      - id: native-image
        name: Install native-image
        run: graalvm-ce-${{ env.JAVA }}-${{ env.GRAAL }}\bin\gu.cmd install native-image
      - id: cache
        name: Cache Maven Repository
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - id: gpg
        name: GPG Key
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: signing.key.asc
          encodedString: ${{ secrets.GPG_SECRET_KEY_BASE64 }}
      - id: copy-key
        name: Copy GPG key to correct location
        run: Copy-Item -Path "${{ steps.gpg.outputs.filePath }}" -Destination "$env:GITHUB_WORKSPACE\signing.key.asc"
      - id: verify
        name: Verify Project
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86_amd64
          mvn --batch-mode verify -Dskip.graal=false -Dpgp.secretkey=keyfile:signing.key.asc -Dpgp.passphrase=literal:${{ secrets.GPG_SECRET_KEY_PASSWORD }}
        env:
          JAVA_HOME: ./graalvm-ce-${{ env.JAVA }}-${{ env.GRAAL }}
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: ./target/ilo-*-windows*
